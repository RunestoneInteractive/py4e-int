<?xml version="1.0"?>
<worksheet xml:id="func_tuplesanddict_groupsub" groupwork="yes" groupsize="4" label="groupwork-tuplesanddict">
  <title>Group Work: Functions with Strings and Conditionals</title>
<section xml:id="functions_group-work-functions-with-strings-and-conditionals">
  <title>Introduction</title>
  <introduction>
  <p>It is best to use a POGIL approach with the following. In POGIL students work
            in groups on activities and each member has an assigned role.  For more information see <url href="https://cspogil.org/Home" visual="https://cspogil.org/Home">https://cspogil.org/Home</url>.</p>
  <note>
    <p>If you work in a group, have only one member of the group fill in the answers on this page.  You will be able to share your answers with the group at the bottom of the page.</p>
  </note>
  <p>
    <term>Learning Objectives</term>
  </p>
  <p>Students will know and be able to do the following.</p>
  <p>
    <em>Content Objectives:</em>
  </p>
  <p>
    <ul>
      <li>
        <p>Learn how to display a value in Python using print.</p>
      </li>
      <li>
        <p>Match terms for functions to their definitiions.</p>
      </li>
      <li>
        <p>Recognize common symbols (:, #), operators (+, -, /), and keywords (def, return) in Python.</p>
      </li>
      <li>
        <p>Recognize strings.</p>
      </li>
      <li>
        <p>Use string indices.</p>
      </li>
      <li>
        <p>Understand how slice works for both positive and negative indices.</p>
      </li>
      <li>
        <p>Use input and convert between strings and numbers.</p>
      </li>
      <li>
        <p>Recognize common string methods.</p>
      </li>
      <li>
        <p>Recognize the keywords used in conditionals in Python (if, elif, else).</p>
      </li>
      <li>
        <p>Predict the output from simple and complex conditionals.</p>
      </li>
      <li>
        <p>Recognize the keywords used in complex conditionals (and, or, not).</p>
      </li>
    </ul>
  </p>
  <p>
    <em>Process Objectives:</em>
  </p>
  <p>
    <ul>
      <li>
        <p>Learn how to properly indent the body of a function</p>
      </li>
      <li>
        <p>Predict the output from code.</p>
      </li>
      <li>
        <p>Modify code to produce the correct output.</p>
      </li>
      <li>
        <p>Create good test data for functions with conditionals</p>
      </li>
      <li>
        <p>Modify code to use complex conditionals</p>
      </li>
    </ul>
  </p>
</introduction>
  <subsection xml:id="fun_str_cond_funct_intro">
    <title>Function Example</title>
    <p>A function is a name for one or more lines of code. You first define a function using the <c>def</c> keyword and then execute 
       it using <c>function_name(arguments)</c>.  
    </p>
    <exercise label="fsc_fitb_print_test_first_line_v3">
      <statement>
        <p>What is the first thing that will be printed when the code below runs? <var/>  </p>
      </statement>
      <setup>
        <var>
          <condition string="Hello!">
            <feedback>
              <p>The main function prints this before it calls the test function.</p>
            </feedback>
          </condition>
          <condition string=".*">
            <feedback>
              <p>The first function that is executed is <c>main</c>. What does that print first?</p>
            </feedback>
          </condition>
        </var>
      </setup>
    </exercise>
    <exercise label="fsc_ac_pogil_print_message_v2">
      <statement>
        <p>Run the code below to see what it prints and then use it to answer the following questions.</p>
      </statement>
      <program xml:id="fsc_ac_pogil_print_message_v2_ac_editor" interactive="activecode" language="python">
        <input>
# function definition
    def test(a, b = 2):
        print("Welcome")
        print("Learn the power of functions!")
        print(a + b)
        print(a - b)
        print(a * b)
        print(a / b)
        print(a // b)
        a = 5 % 2
        return a

    # function definition
    def main():
        print("Hello!")

        # function call
        print(test(3))

    # function call
    main()
        </input>
      </program>
    </exercise>

  <note>
    <p>You do not declare the type of a variable in Python. Python requires that all statements that are part of the body of a function must be indented. Use four spaces to indent.</p>
  </note>

    <exercise label="fsc_fitb_print_test_value_b">
      <statement>
        <p>What is the value of <c>b</c> when function <c>test</c> starts executing?</p>
      </statement>
      <setup>
        <var>
          <condition number="2">
            <feedback>
              <p>Since the value of <c>b</c> was not specified it defaults to 2 (it was set to 2 as a default in the function definition)</p>
            </feedback>
          </condition>
          <condition string=".*">
            <feedback>
              <p>What is the default value specified for <c>b</c> in the function definition?</p>
            </feedback>
          </condition>
        </var>
      </setup>
    </exercise>
    <p>Delete the last line of the test function above and run the code again.</p>
    <exercise label="fsc_fitb_return_None">
      <statement>
        <p>What value is returned from a function that doesn't have a <c>return</c> keyword? <var/>  </p>
      </statement>
      <setup>
        <var>
          <condition string="None">
            <feedback>
              <p>A function without a <c>return</c> still returns the keyword None</p>
            </feedback>
          </condition>
          <condition string=".*">
            <feedback>
              <p>What is the last thing that is printed when you run the code above after deleting the return from the test function?</p>
            </feedback>
          </condition>
        </var>
      </setup>
    </exercise>
   
  </subsection>
</section>
</worksheet>
